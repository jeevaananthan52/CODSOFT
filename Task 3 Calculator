<!DOCTYPE html>
<html lang="en-US">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Modern Calculator</title>
    <style>
        :root {
            --primary: #2d2d2d;
            --secondary: #ff9500;
            --background: #f0f0f0;
        }
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            margin: 0;
            background: var(--background);
            font-family: Arial, sans-serif;
        }
        .calculator {
            background: white;
            border-radius: 20px;
            box-shadow: 0 8px 30px rgba(0,0,0,0.12);
            padding: 25px;
            width: 320px;
        }
        #display {
            background: var(--primary);
            color: white;
            font-size: 2.5rem;
            text-align: right;
            padding: 20px;
            border-radius: 12px;
            margin-bottom: 20px;
            min-height: 80px;
            word-wrap: break-word;
        }
        .buttons {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 10px;
        }
        button {
            border: none;
            padding: 20px;
            font-size: 1.2rem;
            border-radius: 12px;
            cursor: pointer;
            transition: all 0.2s;
        }
        button:hover {
            filter: brightness(0.95);
        }
        .number {
            background: #e4e4e4;
        }
        .operator {
            background: var(--secondary);
            color: white;
        }
        .equals {
            background: #007AFF;
            color: white;
        }
        .clear {
            background: #ff3b30;
            color: white;
        }
    </style>
</head>
<body>
    <div class="calculator">
        <div id="display">0</div>
        <div class="buttons">
            <button class="clear" onclick="clearDisplay()">C</button>
            <button class="operator" onclick="appendOperator('/')">/</button>
            <button class="operator" onclick="appendOperator('*')">×</button>
            <button class="operator" onclick="appendOperator('-')">-</button>
            
            <button class="number" onclick="appendNumber('7')">7</button>
            <button class="number" onclick="appendNumber('8')">8</button>
            <button class="number" onclick="appendNumber('9')">9</button>
            <button class="operator" onclick="appendOperator('+')">+</button>
            
            <button class="number" onclick="appendNumber('4')">4</button>
            <button class="number" onclick="appendNumber('5')">5</button>
            <button class="number" onclick="appendNumber('6')">6</button>
            <button class="equals" onclick="calculate()" style="grid-row: span 2">=</button>
            
            <button class="number" onclick="appendNumber('1')">1</button>
            <button class="number" onclick="appendNumber('2')">2</button>
            <button class="number" onclick="appendNumber('3')">3</button>
            
            <button class="number" onclick="appendNumber('0')" style="grid-column: span 2">0</button>
            <button class="number" onclick="appendDecimal()">.</button>
        </div>
    </div>

    <script>
        let display = document.getElementById('display');
        let currentExpression = '0';
        let lastResult = null;

        function updateDisplay(value) {
            display.textContent = value;
        }

        function appendNumber(num) {
            if (currentExpression === '0' || lastResult !== null) {
                currentExpression = num;
                lastResult = null;
            } else {
                currentExpression += num;
            }
            updateDisplay(currentExpression);
        }

        function appendOperator(operator) {
            if (lastResult !== null) {
                currentExpression = lastResult.toString();
                lastResult = null;
            }
            currentExpression += ` ${operator} `;
            updateDisplay(currentExpression);
        }

        function appendDecimal() {
            if (!currentExpression.includes('.')) {
                currentExpression += '.';
                updateDisplay(currentExpression);
            }
        }

        function clearDisplay() {
            currentExpression = '0';
            lastResult = null;
            updateDisplay(currentExpression);
        }

        function calculate() {
            try {
                // Replace × with * for proper evaluation
                const expression = currentExpression.replace(/×/g, '*');
                lastResult = eval(expression);
                currentExpression = lastResult.toString();
                updateDisplay(currentExpression);
            } catch (error) {
                updateDisplay('Error');
                currentExpression = '0';
                lastResult = null;
            }
        }
    </script>
</body>
</html>
